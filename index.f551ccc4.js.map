{"mappings":"ACEA,SAAS,gBAAgB,CAAC,mBAAoB,WAC5C,SAAS,EAAmB,CAAI,CAAE,CAAO,EACvC,IAAM,EAAkB,SAAS,aAAa,CAAC,OAE/C,EAAgB,YAAY,CAAC,UAAW,gBACxC,EAAgB,SAAS,CAAG,EAC5B,EAAgB,SAAS,CAAC,GAAG,CAAC,GAC9B,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,CAiBA,AAfqB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,SAAS,IACP,EAAQ,8BACR,SAAS,mBAAmB,CAAC,QAAS,EACxC,CAEA,SAAS,gBAAgB,CAAC,QAAS,GAEnC,IAAM,EAAY,WAAW,WAC3B,aAAa,GACb,EAAO,AAAI,MAAM,+BACjB,SAAS,mBAAmB,CAAC,QAAS,EACxC,EAAG,IACL,GAGG,IAAI,CAAC,SAAC,CADT,EAEI,EAAmB,UAAW,EAChC,GACC,KAAK,CAAC,SAAC,CADR,EAEE,EAAmB,UAAW,EAAM,OAAO,CAC7C,GAcF,AAZsB,IAAI,QAAQ,SAAC,CAAnC,EASE,SAAS,gBAAgB,CAAC,QAR1B,SAAS,EAAY,CAAM,EACL,UAAhB,EAAO,IAAI,EAAiB,CAAA,AAAkB,IAAlB,EAAO,MAAM,EACxC,AAAkB,IAAlB,EAAO,MAAM,AAAK,IACrB,EAAQ,+BACR,SAAS,mBAAmB,CAAC,QAAS,GAE1C,EAGF,GAEc,IAAI,CAAC,SAAC,CAApB,EACE,EAAmB,UAAW,EAChC,GA+BA,AA7BqB,IAAI,QAAQ,SAAC,CAAlC,EAIW,IAAA,EAAT,WACE,EAAY,CAAA,EACZ,GACF,EAES,EAAT,SAA0B,CAAM,EACV,gBAAhB,EAAO,IAAI,GACb,EAAO,cAAc,GACrB,EAAa,CAAA,EACb,IAEJ,EAES,EAAT,WACM,GAAa,IACf,EAAQ,uCACR,SAAS,mBAAmB,CAAC,QAAS,GACtC,SAAS,mBAAmB,CAAC,cAAe,GAEhD,EAtBI,EAAY,CAAA,EACZ,EAAa,CAAA,EAuBjB,SAAS,gBAAgB,CAAC,QAAS,GACnC,SAAS,gBAAgB,CAAC,cAAe,EAC3C,GAEa,IAAI,CAAC,SAAC,CAAnB,EACE,EAAmB,UAAW,EAChC,GAAG,KAAK,CAAC,SAAC,CAAV,EACE,EAAmB,UAAW,EAAM,OAAO,CAC7C,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    function updateNotification(stat, message) {\n        var notificationDiv = document.createElement(\"div\");\n        notificationDiv.setAttribute(\"data-qa\", \"notification\");\n        notificationDiv.innerHTML = message;\n        notificationDiv.classList.add(stat);\n        document.body.appendChild(notificationDiv);\n    }\n    var firstPromise = new Promise(function(resolve, reject) {\n        function handleClick() {\n            resolve(\"First promise was resolved\");\n            document.removeEventListener(\"click\", handleClick);\n        }\n        document.addEventListener(\"click\", handleClick);\n        var timeoutId = setTimeout(function() {\n            clearTimeout(timeoutId);\n            reject(new Error(\"First promise was rejected\"));\n            document.removeEventListener(\"click\", handleClick);\n        }, 3000);\n    });\n    firstPromise.then(function(message) {\n        updateNotification(\"success\", message);\n    }).catch(function(error) {\n        updateNotification(\"warning\", error.message);\n    });\n    var secondPromise = new Promise(function(resolve) {\n        function handleClick(events) {\n            if (events.type === \"click\" && (events.button === 0 || events.button === 2)) {\n                resolve(\"Second promise was resolved\");\n                document.removeEventListener(\"click\", handleClick);\n            }\n        }\n        document.addEventListener(\"click\", handleClick);\n    });\n    secondPromise.then(function(message) {\n        updateNotification(\"success\", message);\n    });\n    var thirdPromise = new Promise(function(resolve) {\n        var handleLeftClick = function handleLeftClick() {\n            leftClick = true;\n            checkBothClicks();\n        };\n        var handleRightClick = function handleRightClick(events) {\n            if (events.type === \"contextmenu\") {\n                events.preventDefault();\n                rightClick = true;\n                checkBothClicks();\n            }\n        };\n        var checkBothClicks = function checkBothClicks() {\n            if (leftClick && rightClick) {\n                resolve(\"Both left and right clicks happened\");\n                document.removeEventListener(\"click\", handleLeftClick);\n                document.removeEventListener(\"contextmenu\", handleRightClick);\n            }\n        };\n        var leftClick = false;\n        var rightClick = false;\n        document.addEventListener(\"click\", handleLeftClick);\n        document.addEventListener(\"contextmenu\", handleRightClick);\n    });\n    thirdPromise.then(function(message) {\n        updateNotification(\"success\", message);\n    }).catch(function(error) {\n        updateNotification(\"warning\", error.message);\n    });\n});\n\n//# sourceMappingURL=index.f551ccc4.js.map\n","'use strict';\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  function updateNotification(stat, message) {\n    const notificationDiv = document.createElement('div');\n\n    notificationDiv.setAttribute('data-qa', 'notification');\n    notificationDiv.innerHTML = message;\n    notificationDiv.classList.add(stat);\n    document.body.appendChild(notificationDiv);\n  }\n\n  const firstPromise = new Promise((resolve, reject) => {\n    function handleClick() {\n      resolve('First promise was resolved');\n      document.removeEventListener('click', handleClick);\n    }\n\n    document.addEventListener('click', handleClick);\n\n    const timeoutId = setTimeout(() => {\n      clearTimeout(timeoutId);\n      reject(new Error('First promise was rejected'));\n      document.removeEventListener('click', handleClick);\n    }, 3000);\n  });\n\n  firstPromise\n    .then((message) => {\n      updateNotification('success', message);\n    })\n    .catch((error) => {\n      updateNotification('warning', error.message);\n    });\n\n  const secondPromise = new Promise((resolve) => {\n    function handleClick(events) {\n      if (events.type === 'click' && (events.button === 0\n        || events.button === 2)) {\n        resolve('Second promise was resolved');\n        document.removeEventListener('click', handleClick);\n      }\n    }\n\n    document.addEventListener('click', handleClick);\n  });\n\n  secondPromise.then((message) => {\n    updateNotification('success', message);\n  });\n\n  const thirdPromise = new Promise((resolve) => {\n    let leftClick = false;\n    let rightClick = false;\n\n    function handleLeftClick() {\n      leftClick = true;\n      checkBothClicks();\n    }\n\n    function handleRightClick(events) {\n      if (events.type === 'contextmenu') {\n        events.preventDefault();\n        rightClick = true;\n        checkBothClicks();\n      }\n    }\n\n    function checkBothClicks() {\n      if (leftClick && rightClick) {\n        resolve('Both left and right clicks happened');\n        document.removeEventListener('click', handleLeftClick);\n        document.removeEventListener('contextmenu', handleRightClick);\n      }\n    }\n\n    document.addEventListener('click', handleLeftClick);\n    document.addEventListener('contextmenu', handleRightClick);\n  });\n\n  thirdPromise.then((message) => {\n    updateNotification('success', message);\n  }).catch((error) => {\n    updateNotification('warning', error.message);\n  });\n});\n"],"names":["document","addEventListener","updateNotification","stat","message","notificationDiv","createElement","setAttribute","innerHTML","classList","add","body","appendChild","firstPromise","Promise","resolve","reject","handleClick","removeEventListener","timeoutId","setTimeout","clearTimeout","Error","then","catch","error","secondPromise","events","type","button","thirdPromise","handleLeftClick","leftClick","checkBothClicks","handleRightClick","preventDefault","rightClick"],"version":3,"file":"index.f551ccc4.js.map"}